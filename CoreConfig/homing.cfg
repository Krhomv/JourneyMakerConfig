
[homing_override]
axes: xyz
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set homing_zhop = printer["gcode_macro _USER_VARIABLES"].homing_zhop|float|abs %}
    {% set homing_travel_accel = printer["gcode_macro _USER_VARIABLES"].homing_travel_accel %}
    {% set z_drop_speed = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}

    {% set homing_first = printer["gcode_macro _USER_VARIABLES"].homing_first|string|upper %}
    {% set x_homing_backoff, y_homing_backoff = printer["gcode_macro _USER_VARIABLES"].homing_backoff_distance_xy|map('float') %}

    {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
    {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}
    {% set x_position_center = printer.toolhead.axis_maximum.x|int/2 - printer.toolhead.axis_minimum.x|int/2 %}
    {% set y_position_center = printer.toolhead.axis_maximum.y|int/2 - printer.toolhead.axis_minimum.y|int/2 %}


    # reset parameters
    {% set X, Y, Z = False, False, False %}

    STATUS_HOMING

    # which axes have been requested for homing
    {% if not 'X' in params
        and not 'Y' in params
        and not 'Z' in params %}

        {% set X, Y, Z = True, True, True %}

    {% else %}
        {% if 'X' in params %}
            {% set X = True %}
        {% endif %}

        {% if 'Y' in params %}
            {% set Y = True %}
        {% endif %}

        {% if 'Z' in params %}
            {% set Z = True %}
        {% endif %}
    {% endif %}


    # Set the homing acceleration prior to any movement
    {% set saved_accel = printer.toolhead.max_accel %}
    {% set saved_decel = printer.toolhead.max_accel_to_decel %}
    M204 S{homing_travel_accel}
    BED_MESH_CLEAR
    G90

    {% if Z %}
        {% if ('z' in printer.toolhead.homed_axes) %}
            {% if (printer.toolhead.position.z < homing_zhop) %}
                {% if verbose %}
                    { action_respond_info("Z too low, performing ZHOP to rehome Z") }
                {% endif %}
                G91
                G0 Z{homing_zhop} F{z_drop_speed}
                G90
            {% else %}
                {% if verbose %}
                    { action_respond_info("Z already safe, no ZHOP needed to rehome Z") }
                {% endif %}
            {% endif %}
        {% elif ('xy' in printer.toolhead.homed_axes) %}
            {% if verbose %}
                { action_respond_info("X and Y already homed, no ZHOP needed to home Z") }
            {% endif %}
        {% else %}
            {% if verbose %}
                { action_respond_info("X and Y not homed, forcing full G28 to home Z properly") }
            {% endif %}
            SET_KINEMATIC_POSITION X=0 Y=0 Z=0
            G0 Z{homing_zhop} F{z_drop_speed}
            {% set X, Y, Z = True, True, True %}
        {% endif %}
    {% endif %}

    {% if X %} # Home x
        {% if verbose %}
            { action_respond_info("Homing X") }
        {% endif %}
        _HOME_X
    {% endif %}
    {% if Y %} # Home y
        {% if verbose %}
            { action_respond_info("Homing Y") }
        {% endif %}
        _HOME_Y
    {% endif %}

    # Home z
    {% if Z %}
        {% if verbose %}
            { action_respond_info("Homing Z") }
        {% endif %}
        _HOME_Z
    {% endif %}

    # Reset acceleration values to what it was before
    SET_VELOCITY_LIMIT ACCEL={saved_accel} ACCEL_TO_DECEL={saved_decel}
    STATUS_READY

[gcode_macro _HOME_X]
gcode: 
  {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed * 60 %}
  RESPOND TYPE=echo MSG="Axis selected: X"
  {% set HOME_CUR = printer["gcode_macro _USER_VARIABLES"].homing_current %}
  RESPOND TYPE=echo MSG="Temporary set X homing current to: {HOME_CUR}"
  # Retrieve used setting for stepper current and save them
  {% set RUN_CUR = printer.configfile.settings['tmc2209 stepper_x'].run_current %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
  # Pause to ensure driver stall flag is clear
  G4 P500
  G28 X0
  G91
  G0 X-10 F{homing_travel_speed}
  G4 P500
  G90
  #Return to the pre-macro values
  RESPOND TYPE=echo MSG="Reset X stepper current to: {RUN_CUR}"
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

[gcode_macro _HOME_Y]
gcode: 
  {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed * 60 %}
  RESPOND TYPE=echo MSG="Axis selected: Y"
  {% set HOME_CUR = printer["gcode_macro _USER_VARIABLES"].homing_current %}
  RESPOND TYPE=echo MSG="Temporary set Y homing current to: {HOME_CUR}"
  # Retrieve used setting for stepper current and save them
  {% set RUN_CUR = printer.configfile.settings['tmc2209 stepper_y'].run_current %}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
  # Pause to ensure driver stall flag is clear
  G4 P500
  RESPOND TYPE=echo MSG="Homing Y"
  G28 Y0
  G91
  G0 Y10 F{homing_travel_speed}
  G4 P500
  G90
  #Return to the pre-macro values
  RESPOND TYPE=echo MSG="Reset Y stepper current to: {RUN_CUR}"
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}

[gcode_macro _HOME_Z]
gcode: 
  {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed * 60 %}
  RESPOND TYPE=echo MSG="Axis selected: Z"
  {% if printer.heater_bed.temperature <0 %}
    RESPOND TYPE=error MSG="Bed not connected Z homing cancelled"
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
  {% else %} 
    RESPOND TYPE=echo MSG="Homing Z"
    G0 X66 Y148 F{homing_travel_speed}
    G28 Z0
    G0 Z20  
  {% endif %}

[gcode_macro _CG28]
description: Homing only if necessary
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        STATUS_HOMING
        G28
    {% endif %}
    STATUS_READY
