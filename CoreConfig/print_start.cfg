[gcode_macro _USER_VARIABLES]
variable_startprint_actions: "bed_soak", "z_offset", "bedmesh", "extruder_heating", "primeline"
gcode:

[gcode_macro START_PRINT]
description: Machine heatup procedure before starting a print
variable_bed_temp: 0
variable_extruder_temp: 0
variable_z_adjust: 0
variable_soak: 0
variable_chamber_temp: 0
variable_chamber_maxtime: 0
variable_initial_tool: 0
variable_material: "XXX"
variable_fl_size: "0_0_0_0"
variable_bed_mesh_profile: ""
variable_bed_mesh_print_min: ""
variable_bed_mesh_print_max: ""
gcode:
    # Get all the parameters passed from the slicer
    {% set BED_TEMP = params.BED_TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_bed_temp)|float %} # Bed temperature
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_extruder_temp)|float %} # Extruder temperature
    {% set Z_ADJUST = params.Z_ADJUST|default(0)|float %}  # Optionnal Z adjustement from the slicer profile (ex. use it if you have textured vs smooth slicer profiles) 
    {% set SOAK = params.SOAK|default(printer["gcode_macro _USER_VARIABLES"].print_default_soak)|int %} # Heatsoak time of the bed in minutes
    {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES"].print_default_material)|string %} # Material type set in the slicer
    {% set BED_MESH_PROFILE = params.MESH|default("")|string %} # Bed mesh profile to load

    # Set the variables to be used in all the modules based on the slicer parameters
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=bed_temp VALUE={BED_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=material VALUE='"{MATERIAL}"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=bed_mesh_profile VALUE='"{BED_MESH_PROFILE}"'

    # Get all the config options and configurations for this macro
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set force_homing_in_start_print = printer["gcode_macro _USER_VARIABLES"].force_homing_in_start_print %}
    {% set firmware_retraction_enabled = printer["gcode_macro _USER_VARIABLES"].firmware_retraction_enabled %}

    {% if MATERIAL not in printer["gcode_macro _USER_VARIABLES"].material_parameters %}
        RESPOND MSG="Material '{MATERIAL}' is unknown!"
        SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=soak VALUE={SOAK}
        { action_raise_error("Add this new material to your material_parameters variable!") }
    {% else %}
        RESPOND MSG="Material '{MATERIAL}' is used"
        {% set material = printer["gcode_macro _USER_VARIABLES"].material_parameters[MATERIAL] %}
        SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=soak VALUE={material.bed_soak}
    {% endif %}


    # --------------------------------
    # Let's do the START_PRINT actions
    # --------------------------------
    STATUS_BUSY

    CLEAR_PAUSE

    BED_MESH_CLEAR

    SET_GCODE_OFFSET Z=0
    M221 S100
    M220 S100
    G90
    M83

    # Material parameters
    {% if firmware_retraction_enabled %}
        SET_RETRACTION RETRACT_LENGTH={material.retract_length} RETRACT_SPEED={material.retract_speed} UNRETRACT_EXTRA_LENGTH={material.unretract_extra_length} UNRETRACT_SPEED={material.unretract_speed}
    {% endif %}
    SET_PRESSURE_ADVANCE ADVANCE={material.pressure_advance}

    # Homing before START_PRINT movements and actions
    {% if force_homing_in_start_print %}
        G28
    {% else %}
        _CG28
    {% endif %}

    # Here is the core of the START_PRINT were we get the startprint_actions variable
    # to do the procedure in the correct order for the configured probe (or user custom override)
    {% set sp_actions = printer["gcode_macro _USER_VARIABLES"].startprint_actions %}
    {% for action in sp_actions %}
        {% if action == "bed_soak" %}
            _MODULE_HEATSOAK_BED
        {% elif action == "skew_correction" %}
            _MODULE_SKEW_CORRECTION
        {% elif action == "extruder_heating" %}
            _MODULE_EXTRUDER_HEATING
        {% elif action == "z_offset" %}
            _MODULE_Z_CALIB
        {% elif action == "bedmesh" %}
            _MODULE_BED_MESH
        {% elif action == "primeline" %}
            _MODULE_PRIMELINE
        {% elif action == "extruder_preheating" %}
            _MODULE_EXTRUDER_PREHEATING
        {% else %}
            { action_raise_error("Unknown module called in START_PRINT! Please verify your startprint_actions variable override!") }
        {% endif %}
    {% endfor %}

    # Fine adjustement of z offset (from the slicer profile). This is used to do a custom adjustement
    # when using textured/smooth PEI sheets, or for a special material from the slicer, etc...
    SET_GCODE_OFFSET Z_ADJUST={Z_ADJUST} MOVE=1

    # Final material parameters
    SET_GCODE_OFFSET Z_ADJUST={material.additional_z_offset} MOVE=1

    # And.... Goooo!
    STATUS_PRINTING

    {% if verbose %}
        RESPOND MSG="Start printing !"
    {% endif %}

    G92 E0.0


[gcode_macro _MODULE_PRIMELINE]
gcode:
    LINE_PURGE

[gcode_macro _MODULE_HEATSOAK_BED]
gcode:
    # ----- BED HEATSOAK -------------------------------------
    # Heatsoak the bed if SOAK time is set and bed is not already warming up to the correct temperature (+-8Â°C).
    # We make the assumption that the soak is not needed if the bed is already at the correct target.
    # We also use the recirculating filter under the bed (if available) at full power to spread the heat
    # during the heatsoak if a specific temperature need to be reached.
    {% set BED_TEMP = printer["gcode_macro START_PRINT"].bed_temp %}
    {% set SOAK = printer["gcode_macro START_PRINT"].soak %}
    {% set CHAMBER_TEMP = printer["gcode_macro START_PRINT"].chamber_temp %}

    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}

    STATUS_HEATING

    {% if printer.heater_bed.temperature < (BED_TEMP - 8) %}

        # If we need a full soak (not 0 min), then move the toolhead to the center front to spread the heat using the hotend fan
        {% if SOAK > 0 %}
            G0 X{max_x|int / 2} Y{max_y|int / 3} Z50 F{St}
        {% endif %}
    
        # Put the bed temperature target and wait for the soak
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME={SOAK}
    {% else %}
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME=0
    {% endif %}


[gcode_macro _MODULE_SKEW_CORRECTION]
gcode:
    SKEW_PROFILE LOAD=CaliFlower

[gcode_macro _MODULE_EXTRUDER_HEATING]
gcode:
    # ----- EXTRUDER HEATING ---------------------------------
    # Heat the nozzle to print temperature ontop of the purge bucket (if available) or in the middle of the bed
    {% set EXTRUDER_TEMP = printer["gcode_macro START_PRINT"].extruder_temp %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}

    STATUS_HEATING

    {% if verbose %}
        RESPOND MSG="Extruder heating to print temperature..."
    {% endif %}

    SMART_PARK
    #G0 X{max_x|int / 2} Y{max_y|int / 3} Z50 F{St}

    M109 S{EXTRUDER_TEMP}

    {% if verbose %}
        RESPOND MSG="Extruder temperature OK"
    {% endif %}

[gcode_macro _MODULE_Z_CALIB]
gcode:
    G28 Z

[gcode_macro _MODULE_BED_MESH]
gcode:
    # ----- BED MESH -------------------------------------------
    {% set BED_MESH_PROFILE = printer["gcode_macro START_PRINT"].bed_mesh_profile %}
    {% set PRINT_MIN = printer["gcode_macro START_PRINT"].bed_mesh_print_min %}
    {% set PRINT_MAX = printer["gcode_macro START_PRINT"].bed_mesh_print_max %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}

    {% if BED_MESH_PROFILE == "" %}
      STATUS_MESHING
      {% if verbose %}
          RESPOND MSG="Bed mesh measurement..."
      {% endif %}
      BED_MESH_CALIBRATE
    {% else %}
        {% if verbose %}
            RESPOND MSG="Load bed mesh profile : {BED_MESH_PROFILE}"
        {% endif %}
        BED_MESH_PROFILE LOAD={BED_MESH_PROFILE}
    {% endif %}


[gcode_macro _MODULE_EXTRUDER_PREHEATING]
gcode:
    # Preheat the nozzle to safe probing temperature.
    {% set safe_extruder_temp = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}

    STATUS_HEATING
    {% if verbose %}
        RESPOND MSG="Pre-heating the nozzle to a safe temperature..."
    {% endif %}

    M109 S{safe_extruder_temp}

    {% if verbose %}
        RESPOND MSG="Extruder at safe temperature of {safe_extruder_temp} degrees"
    {% endif %}

[gcode_macro HEATSOAK_BED]
description: Heatsoak bed at specified temperature and wait for a specific amount of time
gcode:
    {% set SETPOINT_TEMP = params.TEMP|default(0)|int %}
    {% set TIME = params.SOAKTIME|default(8)|int %}

    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}

    {% if verbose %}
        RESPOND MSG="Heating up bed..."
    {% endif %}

    M190 S{SETPOINT_TEMP}

    {% if TIME > 0 %}
        {% for i in range(0, TIME) %}
            RESPOND MSG="Heatsoak bed, {TIME-i}mn left..."
            G4 P{60000 * 1}
        {% endfor %}
    {% else %}
        RESPOND MSG="No heatsoak needed, continue"
    {% endif %}

    {% if verbose %}
        RESPOND MSG="Bed temperature OK"
    {% endif %}

